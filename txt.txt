t_data data;

int main(int ac, char **av)
{
    (void)ac;
    (void)av;
    t_data data;
    
    data.size_x = 1920;
    data.size_y = 1080;
    int height,widht;
    data.mlx = mlx_init();
    data.win = mlx_new_window(data.mlx ,data.size_x, data.size_y, "mywindow");
    data.image = mlx_xpm_file_to_image(data.mlx, "luffy.xpm", &widht, &height);
    data.image1 = mlx_xpm_file_to_image(data.mlx, "luffy_walk.xpm", &widht, &height);
    
    //mlx_pixel_put(data.mlx, data.win, data.size_x/2, data.size_y/2, 0xFFFFFF);

    height = 1;
    widht = 1;
    mlx_put_image_to_window(data.mlx, data.win, data.image, height, widht);
    //mlx_put_image_to_window(data.mlx, data.win, data.image1, height * 120, widht);
    
    mlx_hook(data.win, 2, 1L<<0, key_press, &data);
    
    mlx_loop(data.mlx);
    return (0);
}

int key_press()
{
    int widht = 0;
    int height = 0;
    data.win = mlx_new_window(data.mlx ,data.size_x, data.size_y, "youwindow");
    mlx_clear_window(data.mlx, data.win);
    mlx_put_image_to_window(data.mlx, data.win, data.image1, height * 120, widht * 120);
    
    return(0);
}








t_data data;
int my_key_funct(int keycode, void *param)
{
    (void) param;
    static int height;
    static int width = 1;
    static int tru = 0;
    height = 1;
    if (keycode == 53) // 53 is the keycode for the 'Esc' key (you can use a different keycode)
    {
        mlx_destroy_window(data.mlx, data.win);
        exit(0);
    }
    else if (tru == 0) // 32 is the keycode for the 'Space' key (you can use a different keycode)
    {
        // Load and display a new image
        mlx_clear_window(data.mlx, data.win);
        data.image1 = mlx_xpm_file_to_image(data.mlx, "luffy_walk.xpm", &width, &height);
        mlx_put_image_to_window(data.mlx, data.win, data.image1, width, height);
        printf("%d\n", width);
        tru = 1;
    }
    else if (tru == 1)
    {
        mlx_clear_window(data.mlx, data.win);
        printf("ahmetmuhsin");
        data.image = mlx_xpm_file_to_image(data.mlx, "luffy.xpm", &width, &height);
        mlx_put_image_to_window(data.mlx, data.win, data.image, width, height);
        printf("%d\n", width);
        tru = 0;
    }
    return (0);
}

int main(void)
{
    static int width = 1;
    static int height = 1;
    (void) width;
    (void) height;
    // MiniLibX initialization
    data.mlx = mlx_init();
    data.win = mlx_new_window(data.mlx, 1920, 1080, "MiniLibX Window");

    // Load and display the initial image
    
    data.image = mlx_xpm_file_to_image(data.mlx, "LufyIdle0.xpm", &width, &height);
    mlx_put_image_to_window(data.mlx, data.win, data.image, width, height);
    
    idle_anim(1);
    // Hook for key press events
    mlx_key_hook(data.win, my_key_funct, data.mlx);

    // Loop to keep the window open
    mlx_loop(data.mlx);

    return 0;
}

void idle_anim()
{
    usleep(100);
    static int width = 1;
    static int height = 1;
    int i = 1000;
    while (i >= 0)
    {
        data.image = mlx_xpm_file_to_image(data.mlx, "LufyIdle0.xpm", &width, &height);
        mlx_put_image_to_window(data.mlx, data.win, data.image, width, height);
        usleep(100);
        mlx_clear_window(data.mlx, data.win);

        data.imageidle1 = mlx_xpm_file_to_image(data.mlx, "LufyIdle1.xpm", &width, &height);
        mlx_put_image_to_window(data.mlx, data.win, data.imageidle1, width, height);
        usleep(100);
        mlx_clear_window(data.mlx, data.win);
        
        data.imageidle2 = mlx_xpm_file_to_image(data.mlx, "LufyIdle2.xpm", &width, &height);
        mlx_put_image_to_window(data.mlx, data.win, data.imageidle2, width, height);
        usleep(100);
        mlx_clear_window(data.mlx, data.win);
        
        data.imageidle3 = mlx_xpm_file_to_image(data.mlx, "LufyIdle3.xpm", &width, &height);
        mlx_put_image_to_window(data.mlx, data.win, data.imageidle3, width, height);
        usleep(100);
        mlx_clear_window(data.mlx, data.win);
        i--;
        printf("asfasdfsfad");
    }
}